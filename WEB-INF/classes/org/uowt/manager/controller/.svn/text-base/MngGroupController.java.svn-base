package org.uowt.manager.controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.uowt.front.entity.GroupImg;
import org.uowt.front.entity.GroupInfo;
import org.uowt.manager.entity.MngResultBean;
import org.uowt.manager.service.MngGroupService;


@Controller
@RequestMapping("mng/group")
public class MngGroupController {
	@Resource
	private MngGroupService groupService;
	
	@RequestMapping("toGroup.do")
	public String toGroup(Model model,Integer result_msg){
		GroupInfo groupInfo = groupService.showGroup();
		model.addAttribute("groupInfo", groupInfo);
		if(result_msg!=null && result_msg==11){
			model.addAttribute("result_msg", "修改成功！");
		}
		return "manager/group";
	}
	
	@RequestMapping("uploadImg.do")
	@ResponseBody
	public MngResultBean uploadImg(String imgSrc,HttpServletRequest request){
		MngResultBean result = new MngResultBean();
		File imgFile = new File(imgSrc);
		String p1 = request.getSession().getServletContext().getRealPath("/");
		//imgFile.transferTo(new File(p1+"/front/img/"));
		return result;
	}
	
	@RequestMapping("updateContent.do")
	@ResponseBody
	public MngResultBean updateContent(String content){
		MngResultBean result = new MngResultBean();
		GroupInfo groupInfo  = new GroupInfo();
		groupInfo.setContent(content);
		groupService.updateContent(groupInfo);
		return result;
	}
	
	
	@RequestMapping("updateGroup.do")
	public String updateGroup(Model model,GroupInfo groupInfo,HttpServletRequest request) throws IOException{
		List<GroupImg> gImgs = groupInfo.getGimgs();
		for(GroupImg gimg:gImgs){
			MultipartFile imgfile = gimg.getImgFile();
			String filename = imgfile.getOriginalFilename();
			if(filename!=null && filename.trim() != ""){
				String realpath = request.getSession().getServletContext().getRealPath(filename);
				String basepath = realpath.substring(0, realpath.lastIndexOf(File.separator));
				basepath += "/front/img/group/";
				File basefile = new File(basepath);
				if(!basefile.exists()){
					basefile.mkdir();
				}
				//找到原来的图片删除
//				String oldurl = basepath + gimg.getUrl();
//				File oldimg = new File(oldurl);
//				if(oldimg.exists()){
//					oldimg.delete();
//				}
				//上传新图
				String newurl = basepath + filename;
				imgfile.transferTo(new File(newurl));
				//插入图片地址到数据库
				gimg.setUrl("/front/img/group/"+filename);
				groupService.updateGroupImg(gimg);
			}else{
				groupService.updateGroupImg(gimg);
			}
		}
		return "forward:toGroup.do?result_msg=11";
	}
	
	@RequestMapping("addGroupImg.do")
	@ResponseBody
	public MngResultBean addGroupImg(){
		MngResultBean result = new MngResultBean();
		groupService.addGroupImg();
		return result;
	}
	@RequestMapping("deleteGroupImg.do")
	@ResponseBody
	public MngResultBean deleteGroupImg(){
		MngResultBean result = new MngResultBean();
		groupService.deleteGroupImg();
		return result;
	}
}
